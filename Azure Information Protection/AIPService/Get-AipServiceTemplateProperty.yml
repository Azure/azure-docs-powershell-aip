### YamlMime:PowershellCmdlet
summary: |-
  Gets the properties of a protection template for Azure Information Protection.
module: AIPService
notes: ""
links:
- text: Get-AipServiceTemplate
  href: ./Get-AipServiceTemplate.yml
- text: Set-AipServiceTemplateProperty
  href: ./Set-AipServiceTemplateProperty.yml
syntaxes:
- >-
  Get-AipServiceTemplateProperty -TemplateId <Guid> [-Names] [-Descriptions] [-RightsDefinitions]

   [-ContentExpirationOption] [-ContentExpirationDate] [-ContentValidityDuration] [-LicenseValidityDuration]

   [-ReadOnly] [-Status] [-ScopedIdentities] [-EnableInLegacyApps] [<CommonParameters>]
examples:
- title: 'Example 1: Get the description and the usage rights for a template'
  code: |-
    PS C:\>Get-AipServiceTemplateProperty -TemplateId 28168524-29c3-44f1-9e11-ea6c60bb6428 -Descriptions -RightsDefinitions
  description: |-
    This command gets the description and the usage rights for all users or groups that are configured for the specified protection template.
  summary: ""
- title: 'Example 2: For all templates, get the name, the usage rights, whether a default template, and whether published or archived'
  code: |-
    PS C:\>$templates = Get-AipServiceTemplate PS C:\>foreach ($template in $templates) {Get-AipServiceTemplateProperty -TemplateId $template.TemplateId -Name -RightsDefinitions -ReadOnly -Status}
  description: |-
    The first command gets all the template IDs and stores them in a variable. The second command then uses this variable to get the template name, the usage rights, whether it is read-only (**True** for a default template, **False** for a custom template), and the status (**Published** or **Archived**) for each template.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: ContentExpirationDate
  description: |+
    Lists the date on which content protected with the template expires.

    Use this parameter only if *ContentExpirationOption* is set to **OnDate**.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: ContentExpirationOption
  description: |+
    Gets the content expiration configuration setting for content that is protected with the template.

    One of the following values is returned:

    - **Never**. Indicates that content is available indefinitely.

    - **OnDate**. Indicates that content expires at a certain fixed date.

    - **AfterDays**. Indicates that content is available for the indicated number of days after it is protected.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: ContentValidityDuration
  description: |+
    Lists the number of days from the day of protection after which content protected with the template expires.

    Use this parameter only if *ContentExpirationOption* is set to **AfterDays**.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Descriptions
  description: |+
    Lists the descriptions for the template in all locales.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: EnableInLegacyApps
  description: |+
    Indicates the behavior of a departmental template in applications that do not support departmental templates (see the *ScopedIdentities* parameter).

    If set to True and the template is a departmental template, all users trying to protect content from an application that does not support departmental templates will see the template and therefore be able to select it, regardless of whether the users are members of the template's target scope or not.

    If set to False, no users see and therefore cannot select the template in applications that do not support departmental templates, even if the users are members of the template's target scope.

    This setting has no effect on templates that are not departmental templates and also has no effect on applications that natively support departmental templates.

    This parameter is functionally the equivalent of the **Show this template to all users when the applications do not support user identity** check box when you configure **APPLICATION COMPATIBILITY** in the Azure classic portal (now retired). There is no equivalent setting in the Azure portal.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: LicenseValidityDuration
  description: |+
    Lists the number of days content is accessible offline after a license to consume it is acquired.

    **-1** indicates unlimited access.

    **0** indicates that a license must be obtained for each use and that content is only available online.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Names
  description: |+
    Lists the names for the template in all locales.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: ReadOnly
  description: |+
    Indicates whether the template is a default template **(True)** and therefore cannot be edited or deleted, or a custom template **(False)** and therefore can be edited or deleted by an administrator.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: RightsDefinitions
  description: |+
    Lists the rights granted to users or groups for the content that is protected with the template.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: ScopedIdentities
  description: |+
    Lists the users by email address (account or group) that can see and therefore select departmental templates from applications.

    For the specified users to see the templates, the application must support departmental templates or the *EnableInLegacyApps* parameter must be set to **True**.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Status
  description: |+
    The status of the template:

    -**Archived** templates are available to consume previously protected content but are not displayed to users.

    -**Published** templates are available to users to protect content.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Guid" data-throw-if-not-resolved="False" />
  name: TemplateId
  isRequired: true
  description: |+
    Specifies the GUID of a protection template.

    You can use the [Get-AipServiceTemplate](./Get-AipServiceTemplate.yml) cmdlet to obtain the template ID of all templates.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: AIPService.Get-AipServiceTemplateProperty
name: Get-AipServiceTemplateProperty
description: |-
  The **Get-AipServiceTemplateProperty** cmdlet gets specified properties of a protection template for Azure Information Protection, by using the *TemplateId* parameter.

  Similar configuration information can also be viewed in the Azure portal, but this cmdlet also includes the template GUID.

  You can query properties of a default template, or a custom template. For more information about custom templates, including how to configure them in the Azure portal, see [Configuring and managing templates for Azure Information Protection](/information-protection/deploy-use/configure-policy-templates).

  **Using the Azure Information Protection unified labeling client?**

  The Azure Information Protection unified labeling client uses protection templates indirectly. If you have the unified labeling client, we recommend that you use label-based cmdlets instead of modifying your protection templates directly.

  For more information, see [Create and publish sensitivity labels](/microsoft-365/compliance/create-sensitivity-labels) in the Microsoft 365 documentation.
metadata:
  external help file: AipService.dll-Help.xml
  Module Name: AIPService
  ms.assetid: E7942746-0F62-4D15-AD46-5DB8235FAF62
  online version: https://go.microsoft.com/fwlink/?linkid=2045221
  schema: 2.0.0
